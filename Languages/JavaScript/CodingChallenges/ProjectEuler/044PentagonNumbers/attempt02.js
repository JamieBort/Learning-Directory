// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
// Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

// Generating Pentaginal Numbers
// Generating Pn Array
var myPnArray = [];
function PnArray(t) {

    for (i = 1; i < t + 1; i++) {
        var P = i * (3 * i - 1) / 2;
        myPnArray.push(P);
    }
    console.log("P" + t + " is: ", myPnArray[t - 1]);
}

// Function summing the two pentaginal numbers.
function PnSum(first, second) {
    console.log("The sum of the two is: ", first + second);
    return first + second;
}

// Function finding the difference between the two pentaginal numbers.
function PnDifference(first, second) {
    if (second > first) {
        var third = 0;
        third = second;
        second = first;
        first = third;
        console.log("Second is greater than first.");
        // console.log("The third is: ",third);
        // console.log("The second is: ", second);
        // console.log("The First is :", first);
    }
    console.log("The difference between the two are of the two is: ", first - second);
}

// PnArray(100); // An array of the first 100 pentagonal numbers.
PnArray(7);
console.log("The myPnArray is ", myPnArray);
console.log("The length of myPnArray is ", myPnArray.length);

// Generate object with the firest number, the second number, the sum of the two, and the difference of the two.
var myObject = {};
function createMyObject(firstNum, secondNum, sum, diff) {
    myObject.firstNum = firstNum;
    // Index of first number.
    myObject.secondNum = secondNum;
    // Index of second number.
    myObject.sum = firstNum + secondNum;
    // does the sum exist in the array?
    myObject.sumExists = myPnArray.indexOf(myObject.sum);
    myObject.diff = Math.abs(firstNum - secondNum);
    // does the difference exist in the array?
    myObject.diffExists = myPnArray.indexOf(myObject.dif);
}
createMyObject(myPnArray[3], myPnArray[2]);
console.log(myObject);

// Create an array of ojbects. Once 'myObject.diffExists' AND 'myObject.sumExists', stop and output the two



// For each pair of numbers in PnArray we have to add and then see if that sum is in PnArray.
console.log(myPnArray[0]);

var sumArray = [];
for (i < 0; i < myPnArray.length; i++) {
    for (j < 0; j < myPnArray.length; j++) {
        // sumArray.push(myPnArray[0] + myPnArray[0]);
        sumArray.push(7);
    }

}
console.log(sumArray);
